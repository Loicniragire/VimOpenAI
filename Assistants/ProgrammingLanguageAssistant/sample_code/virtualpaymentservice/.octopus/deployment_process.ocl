step "check-fast-pass" {
    name = "Check FastPass"

    action {
        is_required = true
        properties = {
            DeployTarget = "onprem"
            Octopus.Action.Template.Id = "ActionTemplates-341"
            Octopus.Action.Template.Version = "41"
            OctopusApiKey = "#{OPA.Octopus.ApiKey}"
            OPA_API_KEY = "#{OPA.API_KEY}"
            OPA_URL = "#{OPA.URL}"
            Pac.Feed.Id = "Feeds-1201"
            Pac.Package.Id = "#{Octopus.Project.Name}"
        }
        worker_pool = "on-prem-linux"
    }
}

step "create-change-request" {
    name = "Create Change Request"

    action {
        environments = ["prd"]
        is_required = true
        properties = {
            Octopus.Action.Template.Id = "ActionTemplates-501"
            Octopus.Action.Template.Version = "22"
            OPA_API_KEY = "#{OPA.API_KEY}"
            OPA_URL = "#{OPA.URL}"
            RepoName = "#{Octopus.Project.Name}"
            ServiceNowInstance = "progleasing"
        }
        worker_pool = "hosted-ubuntu"
    }
}

step "get-app-pool-password-cyberark" {
    name = "Get App Pool Password - CyberArk"

    action {
        notes = "Get the app pool users password from CyberArk"
        properties = {
            CONJUR_ACCOUNT = "#{Conjur.Account}"
            CONJUR_APPLIANCE_URL = "#{Conjur.Url}"
            CONJUR_AUTHN_API_KEY = "#{Conjur.Token}"
            CONJUR_AUTHN_LOGIN = "#{Conjur.Login}"
            CONJUR_FIX_SLASH_ENCODING = "False"
            CONJUR_OUTPUT_NAME = "AppPoolPassword"
            CONJUR_STAY_SENSITIVE = "True"
            CONJUR_VARIABLE_ID = "#{Conjur.AccountName}"
            Octopus.Action.Template.Id = "ActionTemplates-301"
            Octopus.Action.Template.Version = "32"
        }
        worker_pool = "on-prem-linux"
    }
}

step "wait-for-change-request-approval-and-conflicts" {
    name = "Wait for Change Request Approval and Conflicts"

    action {
        environments = ["prd"]
        is_required = true
        properties = {
            ChangeRequestSysID = "#{Octopus.Action[Create Change Request].Output.ChangeRequestSysID}"
            ChangeRequestTicketNumber = "#{Octopus.Action[Create Change Request].Output.ChangeRequestNumber}"
            maxWaitTime = "180"
            Octopus.Action.Template.Id = "ActionTemplates-502"
            Octopus.Action.Template.Version = "4"
            OPA_API_KEY = "#{OPA.API_KEY}"
            OPA_URL = "#{OPA.URL}"
            ServiceNowInstance = "progleasing"
            SleepTime = "30"
        }
        worker_pool = "hosted-ubuntu"
    }
}

step "deploy-to-iis-phx" {
    name = "Deploy to IIS (PHX)"
    properties = {
        Octopus.Action.MaxParallelism = "1"
        Octopus.Action.TargetRoles = "VDO - PHX"
    }

    action "disable-f5-pool-member-phx" {
        environments = ["dmo", "rcp", "prd"]
        name = "Disable F5 Pool Member (PHX)"
        properties = {
            action = "Offline"
            connection_count = "10"
            f5_endpoints = "#{Global.F5LoadBalancers}"
            f5pass = "#{Global.F5Pass}"
            f5pool_active_percentage = "50"
            f5user = "#{Global.F5User}"
            node = "#{Octopus.Machine.Name}"
            Octopus.Action.Template.Id = "ActionTemplates-261"
            Octopus.Action.Template.Version = "17"
            timeout = "120"
        }
        worker_pool = "on-prem-linux"
    }

    action "iis-apppool-stop-phx" {
        is_required = true
        name = "IIS AppPool - Stop (PHX)"
        properties = {
            AppPoolCheckDelay = "1000"
            AppPoolCheckRetries = "10"
            AppPoolName = "#{AppPool.Name}"
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Template.Id = "ActionTemplates-81"
            Octopus.Action.Template.Version = "5"
        }
        worker_pool_variable = ""
    }

    action "iis-apppool-create-phx" {
        name = "IIS AppPool - Create (PHX)"
        properties = {
            AppPoolAutoStart = "True"
            AppPoolCpuLimit = "0"
            AppPoolCpuLimitAction = "0"
            AppPoolEnable32BitAppOnWin64 = "False"
            AppPoolIdentityPassword = "#{Octopus.Action[Get App Pool Password - CyberArk].Output.AppPoolPassword}"
            AppPoolIdentityType = "3"
            AppPoolIdentityUser = "#{AppPool.User}"
            AppPoolIdleTimeoutMinutes = "#{AppPool.IdleTimeoutMinutes}"
            AppPoolLoadUserProfile = "True"
            AppPoolManagedPipelineMode = "0"
            AppPoolManagedRuntimeVersion = "No Managed Code"
            AppPoolMaxProcesses = "1"
            AppPoolName = "#{AppPool.Name}"
            AppPoolPeriodicRecycleTime = "03:00:00"
            AppPoolQueueLength = "1000"
            AppPoolRegularTimeInterval = "1740"
            AppPoolStartMode = "#{AppPool.StartMode}"
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Template.Id = "ActionTemplates-222"
            Octopus.Action.Template.Version = "14"
        }
        worker_pool_variable = ""
    }

    action "deploy-to-iis-phx" {
        action_type = "Octopus.IIS"
        is_required = true
        name = "Deploy to IIS (PHX)"
        properties = {
            Octopus.Action.EnabledFeatures = "Octopus.Features.IISWebSite,Octopus.Features.CustomDirectory,Octopus.Features.JsonConfigurationVariables"
            Octopus.Action.IISWebSite.ApplicationPoolFrameworkVersion = "v4.0"
            Octopus.Action.IISWebSite.ApplicationPoolIdentityType = "ApplicationPoolIdentity"
            Octopus.Action.IISWebSite.Bindings = "[{\"protocol\":\"http\",\"port\":\"80\",\"host\":\"\",\"thumbprint\":null,\"certificateVariable\":null,\"requireSni\":\"False\",\"enabled\":\"True\"}]"
            Octopus.Action.IISWebSite.CreateOrUpdateWebSite = "False"
            Octopus.Action.IISWebSite.DeploymentType = "webApplication"
            Octopus.Action.IISWebSite.EnableAnonymousAuthentication = "False"
            Octopus.Action.IISWebSite.EnableBasicAuthentication = "False"
            Octopus.Action.IISWebSite.EnableWindowsAuthentication = "True"
            Octopus.Action.IISWebSite.StartApplicationPool = "True"
            Octopus.Action.IISWebSite.StartWebSite = "True"
            Octopus.Action.IISWebSite.VirtualDirectory.CreateOrUpdate = "False"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolFrameworkVersion = "No Managed Code"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolIdentityType = "SpecificUser"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolName = "#{AppPool.Name}"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolPassword = "#{Octopus.Action[Get App Pool Password - CyberArk].Output.AppPoolPassword}"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolUsername = "#{AppPool.User}"
            Octopus.Action.IISWebSite.WebApplication.CreateOrUpdate = "True"
            Octopus.Action.IISWebSite.WebApplication.VirtualPath = "#{VirtualPath}"
            Octopus.Action.IISWebSite.WebApplication.WebSiteName = "Default Web Site"
            Octopus.Action.IISWebSite.WebRootType = "packageRoot"
            Octopus.Action.Package.CustomInstallationDirectory = "#{Global.CustomInstallFolder}"
            Octopus.Action.Package.CustomInstallationDirectoryShouldBePurgedBeforeDeployment = "False"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "octopus-server-built-in"
            Octopus.Action.Package.JsonConfigurationVariablesTargets = "appsettings.json"
            Octopus.Action.Package.PackageId = "#{Octopus.Project.Name}"
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.WebApplication.WebRootType = "packageRoot"
        }
        worker_pool_variable = ""

        packages {
            acquisition_location = "Server"
            feed = "aws-artifactory-app-store"
            package_id = "#{Octopus.Project.Name}"
            properties = {
                SelectionMode = "immediate"
            }
        }
    }

    action "set-cyberark-a-api-key-phx" {
        is_required = true
        name = "Set CyberArk _A API Key (PHX)"
        properties = {
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Template.Id = "ActionTemplates-103"
            Octopus.Action.Template.Version = "3"
            onboardingKey = "#{CyberArk.Api.Key.A}"
            onBoardingKeyName = "#{SecretManagement:SafeName}_A_CONJUR_APIKEY"
            projectInstallDirectory = "#{Global.CustomInstallFolder}"
        }
        worker_pool_variable = ""
    }

    action "set-cyberark-b-api-key-phx" {
        name = "Set CyberArk _B API Key (PHX)"
        properties = {
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Template.Id = "ActionTemplates-103"
            Octopus.Action.Template.Version = "3"
            onboardingKey = "#{CyberArk.Api.Key.B}"
            onBoardingKeyName = "#{SecretManagement:SafeName}_B_CONJUR_APIKEY"
            projectInstallDirectory = "#{Global.CustomInstallFolder}"
        }
        worker_pool_variable = ""
    }
    
    action "enable-f5-pool-member-phx" {
        environments = ["dmo", "rcp", "prd"]
        name = "Enable F5 Pool Member (PHX)"
        properties = {
            action = "Enable"
            connection_count = "10"
            f5_endpoints = "#{Global.F5LoadBalancers}"
            f5pass = "#{Global.F5Pass}"
            f5pool_active_percentage = "50"
            f5user = "#{Global.F5User}"
            node = "#{Octopus.Machine.Name}"
            Octopus.Action.Template.Id = "ActionTemplates-261"
            Octopus.Action.Template.Version = "17"
            timeout = "120"
        }
        worker_pool = "on-prem-linux"
    }

    action "prog-on-prem-release-backup-cache-phx" {
        name = "Prog On-Prem Release Backup Cache (PHX)"
        properties = {
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Template.Id = "ActionTemplates-343"
            Octopus.Action.Template.Version = "15"
            Retention.Criteria = "number"
            Retention.PackageId = "#{Octopus.Project.Name}"
            Retention.PackagesRootDirectory = "#{Global.CustomInstallFolder.Root}"
            Retention.Value = "10"
        }
        worker_pool_variable = ""
    }   
}

step "deploy-to-iis-slc" {
    name = "Deploy to IIS (SLC)"
    properties = {
        Octopus.Action.MaxParallelism = "1"
        Octopus.Action.TargetRoles = "VDO - SLC"
    }
    start_trigger = "StartWithPrevious"

    action "disable-f5-pool-member-slc" {
        environments = ["dmo", "rcp", "prd"]
        name = "Disable F5 Pool Member (SLC)"
        properties = {
            action = "Offline"
            connection_count = "10"
            f5_endpoints = "#{Global.F5LoadBalancers}"
            f5pass = "#{Global.F5Pass}"
            f5pool_active_percentage = "50"
            f5user = "#{Global.F5User}"
            node = "#{Octopus.Machine.Name}"
            Octopus.Action.Template.Id = "ActionTemplates-261"
            Octopus.Action.Template.Version = "17"
            timeout = "120"
        }
        worker_pool = "on-prem-linux"
    }

    action "iis-apppool-stop-slc" {
        is_required = true
        name = "IIS AppPool - Stop (SLC)"
        properties = {
            AppPoolCheckDelay = "1000"
            AppPoolCheckRetries = "10"
            AppPoolName = "#{AppPool.Name}"
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Template.Id = "ActionTemplates-81"
            Octopus.Action.Template.Version = "5"
        }
        worker_pool_variable = ""
    }

    action "iis-apppool-create-slc" {
        name = "IIS AppPool - Create (SLC)"
        properties = {
            AppPoolAutoStart = "True"
            AppPoolCpuLimit = "0"
            AppPoolCpuLimitAction = "0"
            AppPoolEnable32BitAppOnWin64 = "False"
            AppPoolIdentityPassword = "#{Octopus.Action[Get App Pool Password - CyberArk].Output.AppPoolPassword}"
            AppPoolIdentityType = "3"
            AppPoolIdentityUser = "#{AppPool.User}"
            AppPoolIdleTimeoutMinutes = "#{AppPool.IdleTimeoutMinutes}"
            AppPoolLoadUserProfile = "True"
            AppPoolManagedPipelineMode = "0"
            AppPoolManagedRuntimeVersion = "No Managed Code"
            AppPoolMaxProcesses = "1"
            AppPoolName = "#{AppPool.Name}"
            AppPoolPeriodicRecycleTime = "03:00:00"
            AppPoolQueueLength = "1000"
            AppPoolRegularTimeInterval = "1740"
            AppPoolStartMode = "#{AppPool.StartMode}"
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Template.Id = "ActionTemplates-222"
            Octopus.Action.Template.Version = "14"
        }
        worker_pool_variable = ""
    }

    action "deploy-to-iis-slc" {
        action_type = "Octopus.IIS"
        is_required = true
        name = "Deploy to IIS (SLC)"
        properties = {
            Octopus.Action.EnabledFeatures = "Octopus.Features.IISWebSite,Octopus.Features.CustomDirectory,Octopus.Features.JsonConfigurationVariables,Octopus.Features.ConfigurationTransforms,Octopus.Features.ConfigurationVariables"
            Octopus.Action.IISWebSite.ApplicationPoolFrameworkVersion = "v4.0"
            Octopus.Action.IISWebSite.ApplicationPoolIdentityType = "ApplicationPoolIdentity"
            Octopus.Action.IISWebSite.Bindings = "[{\"protocol\":\"http\",\"port\":\"80\",\"host\":\"\",\"thumbprint\":null,\"certificateVariable\":null,\"requireSni\":\"False\",\"enabled\":\"True\"}]"
            Octopus.Action.IISWebSite.CreateOrUpdateWebSite = "False"
            Octopus.Action.IISWebSite.DeploymentType = "webApplication"
            Octopus.Action.IISWebSite.EnableAnonymousAuthentication = "False"
            Octopus.Action.IISWebSite.EnableBasicAuthentication = "False"
            Octopus.Action.IISWebSite.EnableWindowsAuthentication = "True"
            Octopus.Action.IISWebSite.StartApplicationPool = "True"
            Octopus.Action.IISWebSite.StartWebSite = "True"
            Octopus.Action.IISWebSite.VirtualDirectory.CreateOrUpdate = "False"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolFrameworkVersion = "No Managed Code"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolIdentityType = "SpecificUser"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolName = "#{AppPool.Name}"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolPassword = "#{Octopus.Action[Get App Pool Password - CyberArk].Output.AppPoolPassword}"
            Octopus.Action.IISWebSite.WebApplication.ApplicationPoolUsername = "#{AppPool.User}"
            Octopus.Action.IISWebSite.WebApplication.CreateOrUpdate = "True"
            Octopus.Action.IISWebSite.WebApplication.VirtualPath = "#{VirtualPath}"
            Octopus.Action.IISWebSite.WebApplication.WebSiteName = "Default Web Site"
            Octopus.Action.IISWebSite.WebRootType = "packageRoot"
            Octopus.Action.Package.CustomInstallationDirectory = "#{Global.CustomInstallFolder}"
            Octopus.Action.Package.CustomInstallationDirectoryShouldBePurgedBeforeDeployment = "False"
            Octopus.Action.Package.DownloadOnTentacle = "False"
            Octopus.Action.Package.FeedId = "octopus-server-built-in"
            Octopus.Action.Package.JsonConfigurationVariablesTargets = "appsettings.json"
            Octopus.Action.Package.PackageId = "#{Octopus.Project.Name}"
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.WebApplication.WebRootType = "packageRoot"
        }
        worker_pool_variable = ""

        packages {
            acquisition_location = "Server"
            feed = "aws-artifactory-app-store"
            package_id = "#{Octopus.Project.Name}"
            properties = {
                SelectionMode = "immediate"
            }
        }
    }

    action "set-cyberark-a-api-key-slc" {
        is_required = true
        name = "Set CyberArk _A API Key (SLC)"
        properties = {
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Template.Id = "ActionTemplates-103"
            Octopus.Action.Template.Version = "3"
            onboardingKey = "#{CyberArk.Api.Key.A}"
            onBoardingKeyName = "#{SecretManagement:SafeName}_A_CONJUR_APIKEY"
            projectInstallDirectory = "#{Global.CustomInstallFolder}"
        }
        worker_pool_variable = ""
    }

    action "set-cyberark-b-api-key-slc" {
        name = "Set CyberArk _B API Key (SLC)"
        properties = {
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Template.Id = "ActionTemplates-103"
            Octopus.Action.Template.Version = "3"
            onboardingKey = "#{CyberArk.Api.Key.B}"
            onBoardingKeyName = "#{SecretManagement:SafeName}_B_CONJUR_APIKEY"
            projectInstallDirectory = "#{Global.CustomInstallFolder}"
        }
        worker_pool_variable = ""
    }
    
    action "enable-f5-pool-member-slc" {
        environments = ["dmo", "rcp", "prd"]
        name = "Enable F5 Pool Member (SLC)"
        properties = {
            action = "Enable"
            connection_count = "10"
            f5_endpoints = "#{Global.F5LoadBalancers}"
            f5pass = "#{Global.F5Pass}"
            f5pool_active_percentage = "50"
            f5user = "#{Global.F5User}"
            node = "#{Octopus.Machine.Name}"
            Octopus.Action.Template.Id = "ActionTemplates-261"
            Octopus.Action.Template.Version = "17"
            timeout = "120"
        }
        worker_pool = "on-prem-linux"
    }

    action "http-health-check-slc" {
        name = "HTTP Health Check (SLC)"
        properties = {
            NumberOfRetries = "3"
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Template.Id = "ActionTemplates-61"
            Octopus.Action.Template.Version = "19"
            ServiceHealthUrl = "#{HealthCheckUrl}"
        }
    }

    action "prog-on-prem-release-backup-cache-slc" {
        name = "Prog On-Prem Release Backup Cache (SLC)"
        properties = {
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Template.Id = "ActionTemplates-343"
            Octopus.Action.Template.Version = "15"
            Retention.Criteria = "number"
            Retention.PackageId = "#{Octopus.Project.Name}"
            Retention.PackagesRootDirectory = "#{Global.CustomInstallFolder.Root}"
            Retention.Value = "10"
        }
        worker_pool_variable = ""
    }
}

step "change-request-to-review-state" {
    name = "Change Request to Review State"

    action {
        environments = ["prd"]
        is_required = true
        properties = {
            ChangeRequestSysID = "#{Octopus.Action[Create Change Request].Output.ChangeRequestSysID}"
            ChangeRequestTicketNumber = "#{Octopus.Action[Create Change Request].Output.ChangeRequestNumber}"
            Octopus.Action.Template.Id = "ActionTemplates-521"
            Octopus.Action.Template.Version = "3"
            OPA_API_KEY = "#{OPA.API_KEY}"
            OPA_URL = "#{OPA.URL}"
            ServiceNowInstance = "progleasing"
        }
        worker_pool = "hosted-ubuntu"
    }
}

step "close-change-request" {
    name = "Close Change Request"

    action {
        environments = ["prd"]
        is_required = true
        properties = {
            ChangeRequestSysID = "#{Octopus.Action[Create Change Request].Output.ChangeRequestSysID}"
            ChangeRequestTicketNumber = "#{Octopus.Action[Create Change Request].Output.ChangeRequestNumber}"
            Octopus.Action.Template.Id = "ActionTemplates-522"
            Octopus.Action.Template.Version = "3"
            OPA_API_KEY = "#{OPA.API_KEY}"
            OPA_URL = "#{OPA.URL}"
            ServiceNowInstance = "progleasing"
        }
        worker_pool = "hosted-ubuntu"
    }
}

step "slack-deployment-result" {
    condition = "Always"
    name = "Slack - Deployment Result"

    action {
        properties = {
            Channel = "#{Slack.Channel}"
            DeploymentInfoText = "#{Slack.MainMessage}"
            HookUrl = "#{Slack.WebHookUrl}"
            IconUrl = "#{Slack.IconURL}"
            IncludeErrorMessageOnFailure = "True"
            IncludeFieldEnvironment = "True"
            IncludeFieldMachine = "True"
            IncludeFieldRelease = "True"
            IncludeFieldReleaseNotes = "True"
            IncludeFieldTenant = "True"
            IncludeFieldUsername = "True"
            IncludeLinkOnFailure = "True"
            Octopus.Action.Template.Id = "ActionTemplates-142"
            Octopus.Action.Template.Version = "9"
            OctopusBaseUrl = "#{Octopus.Web.ServerUri}"
            Username = "#{Slack.Username}"
        }
        worker_pool = "hosted-ubuntu"
    }
}